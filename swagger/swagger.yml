openapi: 3.0.0
info:
  title: Laba 6 API
  description: |
    ## CRUD 
    | Операция   | Описание   | Тип запроса |
    |------------|------------|-------------|
    | **C**reate | Создание   | *POST*      |
    | **R**ead   | Чтение     | *GET*       |
    | **U**pdate | Обновление (частичное, указывать все поля необязательно) | *PATCH*     |
    | **D**elete | Удаление   | *DELETE*    |

  version: 0.0.1

servers: # сервера для проверки API
  - url: /api/ # будет обращаться по тому же адресу где запущен swager с добавлением /api/ в путь
    description: Django сервер для Лабы №6

paths: # все URI для запростов
# клиенты
  /customer/:  # http://localhost/api/customer/
    get: # тип запроса GET
      tags: # тэг для группировки
      - Клиенты
      summary: Операция чтения список клиентов
      description: Вернет JSON список всех клиентов
      security: # указываем что запрос требует авторизации
        - BasicAuth: [] # тип авторизации
      responses:
        200: # успешно
          description: JSON список клиентов
          content: # контекст ответа
            application/json: # тип передаваемых данных
              schema: # схема / структура передаваемых данных
                type: array # тип массив
                items: # элемент массива
                  $ref: "#/components/schemas/Customer" # ссылка на структуру типа Customer
        
        401: # неавторизован
          description: Нет авторизации
          content: # контекст ответа
            application/json: # тип передаваемых данных
              schema: # схема / структура передаваемых данных
                $ref: "#/components/schemas/Error" # ссылка на структуру типа Error

    post: # тип запроса POST
      tags: # тэг для группировки
      - Клиенты
      summary: Создаст клиента
      description: Создаст клиента
      security: # указываем что запрос требует авторизации
        - BasicAuth: [] # тип авторизации
      requestBody: # тело запроса
        description:  Данные нового клиента в *JSON* формате
        required: true # поле обязательно
        content: # контекст передаваемых данных
          application/json: # тип передаваемых данных
            schema: # схема / структура передаваемых данных 
              $ref: "#/components/schemas/Customer" # ссылка на структуру типа Customer
      responses:
        201: # создано успешно
          description: Клиент создан успешно
          content: # контекст ответа
            application/json: # тип передаваемых данных
              schema: # схема / структура передаваемых данных 
                $ref: "#/components/schemas/Customer" # ссылка на структуру типа Customer
        400: # создание не удалось
          description: Создание не удалось

  /customer/{id}/: # http://localhost/api/customer/1/
    get: # тип запроса GET
      tags: # тэг для группировки
      - Клиенты
      summary: Операция чтения данных одного клиента
      description: Вернет JSON клиента по id
      security: # указываем что запрос требует авторизации
        - BasicAuth: [] # тип авторизации
      parameters: # параметры запроса
        - name: id # имя параметра
          in: path # параметр часть URL
          description: Идентификатор клиента
          required: true # обязательный параметр
          schema: # схема параметра
            type: integer # тип целое число
            format: int64 # формат 64 битный int
      responses: # ответ
        200: # все успешно
          description: JSON объект с данными клиента
          content: # контекст ответа
            application/json: # тип передаваемых данных
              schema: # схема / структура передаваемых данных
                $ref: "#/components/schemas/Customer" # ссылка на структуру типа Customer
    
    patch: # тип запроса PATCH
      tags: # тэг для группировки
      - Клиенты
      summary: Операция обновления данные клиента
      description: Обновить указаные поля в JSON данных клиента по id
      security: # указываем что запрос требует авторизации
        - BasicAuth: [] # тип авторизации
      parameters: # параметры запроса
        - name: id # имя параметра
          in: path # параметр часть URL
          description: Идентификатор клиента
          required: true # обязательный параметр
          schema: # схема параметра
            type: integer # тип целое число
            format: int64 # формат 64 битный int
      requestBody: # тело запроса
        description:  Данные с полями для обновления клиента в *JSON* формате
        required: true # поле обязательно
        content: # контекст передаваемых данных
          application/json: # тип передаваемых данных
            schema: # схема / структура передаваемых данных 
              $ref: "#/components/schemas/Customer" # ссылка на структуру типа Customer
      responses: # ответ
        200: # все успешно
          description: JSON объект с обновленными данными клиента
          content: # контекст ответа
            application/json: # тип передаваемых данных
              schema: # схема / структура передаваемых данных
                $ref: "#/components/schemas/Customer" # ссылка на структуру типа Customer
    
    delete: # тип запроса DELETE
      tags: # тэг для группировки
      - Клиенты
      summary: Операция удалит клиента
      description: Удалит клиента по id
      security: # указываем что запрос требует авторизации
        - BasicAuth: [] # тип авторизации
      parameters: # параметры запроса
        - name: id # имя параметра
          in: path # параметр часть URL
          description: Идентификатор клиента
          required: true # обязательный параметр
          schema: # схема параметра
            type: integer # тип целое число
            format: int64 # формат 64 битный int
      responses:
        204: # все успешно
          description: Клиент удален

# вклады
  /customer/{customer_id}/deposit/:  # http://localhost/api/customer/1/deposit/
    get: # тип запроса GET
      tags: # тэг для группировки
      - Вклады
      summary: Операция чтения список вкладов клиента
      description: Вернет JSON список всех вкладов клиента
      security: # указываем что запрос требует авторизации
        - BasicAuth: [] # тип авторизации
      parameters: # параметры запроса
        - name: customer_id # имя параметра
          in: path # параметр часть URL
          description: Идентификатор клиента
          required: true # обязательный параметр
          schema: # схема параметра
            type: integer # тип целое число
            format: int64 # формат 64 битный int
      responses:
        200: # успешно
          description: JSON список вкладов
          content: # контекст ответа
            application/json: # тип передаваемых данных
              schema: # схема / структура передаваемых данных
                type: array # тип массив
                items: # элемент массива
                  $ref: "#/components/schemas/Deposit" # ссылка на структуру типа Deposit
        
        401: # неавторизован
          description: Нет авторизации
          content: # контекст ответа
            application/json: # тип передаваемых данных
              schema: # схема / структура передаваемых данных
                $ref: "#/components/schemas/Error" # ссылка на структуру типа Error

    post: # тип запроса POST
      tags: # тэг для группировки
      - Вклады
      summary: Создаст вклад клиента
      description: Создаст вклад клиента
      security: # указываем что запрос требует авторизации
        - BasicAuth: [] # тип авторизации
      parameters: # параметры запроса
        - name: customer_id # имя параметра
          in: path # параметр часть URL
          description: Идентификатор клиента
          required: true # обязательный параметр
          schema: # схема параметра
            type: integer # тип целое число
            format: int64 # формат 64 битный int
      requestBody: # тело запроса
        description:  Данные нового вклада клиента в *JSON* формате
        required: true # поле обязательно
        content: # контекст передаваемых данных
          application/json: # тип передаваемых данных
            schema: # схема / структура передаваемых данных 
              $ref: "#/components/schemas/Deposit" # ссылка на структуру типа Deposit
      responses:
        201: # создано успешно
          description: Вклад создан успешно
          content: # контекст ответа
            application/json: # тип передаваемых данных
              schema: # схема / структура передаваемых данных 
                $ref: "#/components/schemas/Deposit" # ссылка на структуру типа Deposit
        400: # создание не удалось
          description: Создание не удалось

  /customer/{customer_id}/deposit/{id}/: # http://localhost/api/customer/1/deposit/2/
    get: # тип запроса GET
      tags: # тэг для группировки
      - Вклады
      summary: Операция чтения данных одного вклада для клиента
      description: Вернет JSON вклада по id
      security: # указываем что запрос требует авторизации
        - BasicAuth: [] # тип авторизации
      parameters: # параметры запроса
        - name: customer_id # имя параметра
          in: path # параметр часть URL
          description: Идентификатор клиента
          required: true # обязательный параметр
          schema: # схема параметра
            type: integer # тип целое число
            format: int64 # формат 64 битный int
        - name: id # имя параметра
          in: path # параметр часть URL
          description: Идентификатор вклада
          required: true # обязательный параметр
          schema: # схема параметра
            type: integer # тип целое число
            format: int64 # формат 64 битный int
      responses: # ответ
        200: # все успешно
          description: JSON объект с данными вклада клиента
          content: # контекст ответа
            application/json: # тип передаваемых данных
              schema: # схема / структура передаваемых данных
                $ref: "#/components/schemas/Deposit" # ссылка на структуру типа Deposit
    
    patch: # тип запроса PATCH
      tags: # тэг для группировки
      - Вклады
      summary: Операция обновления данные вклада клиента
      description: Обновить указаные поля в JSON данных вклада клиента по id и customer_id
      security: # указываем что запрос требует авторизации
        - BasicAuth: [] # тип авторизации
      parameters: # параметры запроса
        - name: customer_id # имя параметра
          in: path # параметр часть URL
          description: Идентификатор клиента
          required: true # обязательный параметр
          schema: # схема параметра
            type: integer # тип целое число
            format: int64 # формат 64 битный int
        - name: id # имя параметра
          in: path # параметр часть URL
          description: Идентификатор вклада
          required: true # обязательный параметр
          schema: # схема параметра
            type: integer # тип целое число
            format: int64 # формат 64 битный int
      requestBody: # тело запроса
        description:  Данные с полями для обновления клиента в *JSON* формате
        required: true # поле обязательно
        content: # контекст передаваемых данных
          application/json: # тип передаваемых данных
            schema: # схема / структура передаваемых данных 
              $ref: "#/components/schemas/Deposit" # ссылка на структуру типа Deposit
      responses: # ответ
        200: # все успешно
          description: JSON объект с обновленными данными вклада клиента
          content: # контекст ответа
            application/json: # тип передаваемых данных
              schema: # схема / структура передаваемых данных
                $ref: "#/components/schemas/Deposit" # ссылка на структуру типа Deposit
    
    delete: # тип запроса DELETE
      tags: # тэг для группировки
      - Вклады
      summary: Операция удалит вклад клиента
      description: Удалит вклад клиента по id и customer_id
      security: # указываем что запрос требует авторизации
        - BasicAuth: [] # тип авторизации
      parameters: # параметры запроса
        - name: customer_id # имя параметра
          in: path # параметр часть URL
          description: Идентификатор клиента
          required: true # обязательный параметр
          schema: # схема параметра
            type: integer # тип целое число
            format: int64 # формат 64 битный int
        - name: id # имя параметра
          in: path # параметр часть URL
          description: Идентификатор вклада
          required: true # обязательный параметр
          schema: # схема параметра
            type: integer # тип целое число
            format: int64 # формат 64 битный int
      responses:
        204: # все успешно
          description: Вклад удален
    

# займы
  /customer/{customer_id}/loan/:  # http://localhost/api/customer/1/loan/
    get: # тип запроса GET
      tags: # тэг для группировки
      - Займы
      summary: Операция чтения список займов клиента
      description: Вернет JSON список всех займов клиента
      security: # указываем что запрос требует авторизации
        - BasicAuth: [] # тип авторизации
      parameters: # параметры запроса
        - name: customer_id # имя параметра
          in: path # параметр часть URL
          description: Идентификатор клиента
          required: true # обязательный параметр
          schema: # схема параметра
            type: integer # тип целое число
            format: int64 # формат 64 битный int
      responses:
        200: # успешно
          description: JSON список займов клиента
          content: # контекст ответа
            application/json: # тип передаваемых данных
              schema: # схема / структура передаваемых данных
                type: array # тип массив
                items: # элемент массива
                  $ref: "#/components/schemas/Loan" # ссылка на структуру типа Loan
        
        401: # неавторизован
          description: Нет авторизации
          content: # контекст ответа
            application/json: # тип передаваемых данных
              schema: # схема / структура передаваемых данных
                $ref: "#/components/schemas/Error" # ссылка на структуру типа Error

    post: # тип запроса POST
      tags: # тэг для группировки
      - Займы
      summary: Создаст займ клиента
      description: Создаст займ клиента
      security: # указываем что запрос требует авторизации
        - BasicAuth: [] # тип авторизации
      parameters: # параметры запроса
        - name: customer_id # имя параметра
          in: path # параметр часть URL
          description: Идентификатор клиента
          required: true # обязательный параметр
          schema: # схема параметра
            type: integer # тип целое число
            format: int64 # формат 64 битный int
      requestBody: # тело запроса
        description:  Данные нового займа клиента в *JSON* формате
        required: true # поле обязательно
        content: # контекст передаваемых данных
          application/json: # тип передаваемых данных
            schema: # схема / структура передаваемых данных 
              $ref: "#/components/schemas/Loan" # ссылка на структуру типа Loan
      responses:
        201: # создано успешно
          description: Займ создан успешно
          content: # контекст ответа
            application/json: # тип передаваемых данных
              schema: # схема / структура передаваемых данных 
                $ref: "#/components/schemas/Loan" # ссылка на структуру типа Loan
        400: # создание не удалось
          description: Создание не удалось

  /customer/{customer_id}/loan/{id}/: # http://localhost/api/customer/1/loan/2/
    get: # тип запроса GET
      tags: # тэг для группировки
      - Займы
      summary: Операция чтения данных одного займа для клиента
      description: Вернет JSON займа по id
      security: # указываем что запрос требует авторизации
        - BasicAuth: [] # тип авторизации
      parameters: # параметры запроса
        - name: customer_id # имя параметра
          in: path # параметр часть URL
          description: Идентификатор клиента
          required: true # обязательный параметр
          schema: # схема параметра
            type: integer # тип целое число
            format: int64 # формат 64 битный int
        - name: id # имя параметра
          in: path # параметр часть URL
          description: Идентификатор займа
          required: true # обязательный параметр
          schema: # схема параметра
            type: integer # тип целое число
            format: int64 # формат 64 битный int
      responses: # ответ
        200: # все успешно
          description: JSON объект с данными займа клиента
          content: # контекст ответа
            application/json: # тип передаваемых данных
              schema: # схема / структура передаваемых данных
                $ref: "#/components/schemas/Loan" # ссылка на структуру типа Loan
    
    patch: # тип запроса PATCH
      tags: # тэг для группировки
      - Займы
      summary: Операция обновления данные займа клиента
      description: Обновить указаные поля в JSON данных займа клиента по id и customer_id
      security: # указываем что запрос требует авторизации
        - BasicAuth: [] # тип авторизации
      parameters: # параметры запроса
        - name: customer_id # имя параметра
          in: path # параметр часть URL
          description: Идентификатор клиента
          required: true # обязательный параметр
          schema: # схема параметра
            type: integer # тип целое число
            format: int64 # формат 64 битный int
        - name: id # имя параметра
          in: path # параметр часть URL
          description: Идентификатор займа
          required: true # обязательный параметр
          schema: # схема параметра
            type: integer # тип целое число
            format: int64 # формат 64 битный int
      requestBody: # тело запроса
        description:  Данные с полями для обновления клиента в *JSON* формате
        required: true # поле обязательно
        content: # контекст передаваемых данных
          application/json: # тип передаваемых данных
            schema: # схема / структура передаваемых данных 
              $ref: "#/components/schemas/Loan" # ссылка на структуру типа Loan
      responses: # ответ
        200: # все успешно
          description: JSON объект с обновленными данными займа клиента
          content: # контекст ответа
            application/json: # тип передаваемых данных
              schema: # схема / структура передаваемых данных
                $ref: "#/components/schemas/Loan" # ссылка на структуру типа Loan
    
    delete: # тип запроса DELETE
      tags: # тэг для группировки
      - Займы
      summary: Операция удалит займ клиента
      description: Удалит вклад клиента по id и customer_id
      security: # указываем что запрос требует авторизации
        - BasicAuth: [] # тип авторизации
      parameters: # параметры запроса
        - name: customer_id # имя параметра
          in: path # параметр часть URL
          description: Идентификатор клиента
          required: true # обязательный параметр
          schema: # схема параметра
            type: integer # тип целое число
            format: int64 # формат 64 битный int
        - name: id # имя параметра
          in: path # параметр часть URL
          description: Идентификатор займа
          required: true # обязательный параметр
          schema: # схема параметра
            type: integer # тип целое число
            format: int64 # формат 64 битный int
      responses:
        204: # все успешно
          description: Вклад удален
    


# компоненты для более простого форматировани файла
components:
  # схемы авторизаций
  securitySchemes:
    BasicAuth: # базовая авторизация
      type: http
      scheme: basic

  schemas: # структуры данных объектов
    Customer: # Клинет
      description: Структура данных объекта Клиент
      type: object # тип данных объект (словарь) 
      properties: # свойста
        id:  # идентификатор
          type: integer # тип число
        first_name: # имя
          type: string # тип строка
        email: # почта
          type: string # тип строка
        address: # адресс
          type: string # тип строка
        deposits: # вклады
          description: Депозит могут бытьдобавлены только после создания клиента
          type: array # тип массив
          items: # элемент массива
            $ref: "#/components/schemas/Deposit" # ссылка на структуру типа Deposit
        loans: # займы
          description: Займы могут бытьдобавлены только после создания клиента
          type: array # тип массив
          items: # элемент массива
            $ref: "#/components/schemas/Loan" # ссылка на структуру типа Loan
      example: # пример данных
        first_name: Правильный Бобер
        email: lakosiera@mail.ru
        address: Солнечный бульвар
        deposits: []
        loans: []

    Deposit: # Вклад
      description: Структура данных объекта Вклад
      type: object # тип данных объект (словарь) 
      properties: # свойста
        id:  # идентификатор вклада
          type: integer # тип число
        amount: # сумма
          type: integer # тип число
      example: # пример данных
        amount: 10000

    Loan: # Кредит
      description: Структура данных объекта Кредит
      type: object # тип данных объект (словарь) 
      properties: # свойста
        id:  # идентификатор вклада
          type: integer # тип число
        amount: # сумма
          type: integer # тип число
        purpose: # цель кредита
          type: string # тип строка
        submitted_on: # дата получение кредита 
          type: string # тип строка
        disbursement_on: # дата планироваемого погашения кредита
          type: string # тип строка
      example: # пример данных
        amount: 1000
        purpose: Кутить
        submitted_on: "2024-12-21"
        disbursement_on: "2025-01-01"


    Error: # ошибка
      type: object # тип данных объект (словарь) 
      properties: # свойста
        detail: # детали
          type: string # тип строка
      example: # пример данных
        detail: Not found.
